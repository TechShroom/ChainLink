import org.apache.tools.ant.filters.ReplaceTokens

// This sets us up for building a forge project - you need all of these
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

group = "com.techshroom"
archivesBaseName = "ChainLink"

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

// Mod Version + Build metadata
version = "${config.mod.version}+${config.mc.version}"

repositories {
    maven {
        name 'snapshots'
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    compile "com.techshroom:TSModCore:${project.config.mc.version}.0"

    testCompile 'junit:junit:4.11'
}

minecraft {
    version = config.mc.version + "-" + config.forge.version
    if (file('../run').exists()) {
        runDir = "../run"
    } else {
        runDir = "run"
    }
}

task updateVersion(type: Copy) {
    from(sourceSets.main.java.srcDirs)
    into 'build/sources/java'
    filter(ReplaceTokens, tokens: [
        'VERSION': version
    ])
}

compileJava.dependsOn updateVersion

processResources {
    //redo task if any of these properties change
    inputs.property "version", project.version
    inputs.property "mc.version", config.mc.version

    // Replace properties in all files
    from(sourceSets.main.resources.srcDirs) {
        include '**.info'
        filter(ReplaceTokens, tokens: [
            'VERSION': config.mod.version,
            'MC_VERSION': config.mc.version,
            'FORGE_VERSION': config.forge.version
        ])
    }
    // Copy everything else
    from(sourceSets.main.resources.srcDirs) {
        include 'assets/**/*.*'
    }
}
